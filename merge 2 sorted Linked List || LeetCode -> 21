    // firsty we created a dummy node and initiallyed it with zero and then compred with n1 node and n2 node data which is snamller 
    // we connected dunny node pointer n3 with smaller data node and increaed tem 
    // at the end we compred that which node is not emply and write the condition to connnect them with n3 and return dummyNode's next pointer ;
    
    
    
    ListNode*n1 = l1;
        ListNode*n2  = l2;
        ListNode* dummyNode = new ListNode(0);
        ListNode*n3 = dummyNode;
        while(n1 != NULL &&  n2 != NULL )
        {
            if(n1->val < n2->val )
            {
                n3->next = n1;
                n1 = n1->next;
            }
            else 
            {
                n3->next = n2;
                n2 = n2->next;
            }
            n3 = n3->next;
        }
        while(n1 != NULL)
        {
            n3 ->next = n1;
            n1 = n1->next;
            n3 = n3->next;
        }
        while(n2 != NULL)
        {
            n3 ->next = n2;
            n2 = n2->next;
            n3 = n3->next;
        }
        return dummyNode->next;




using recursion approch to merge to sorted linked list 


    ListNode*dummyNode ;
    
    
    // base case if l1 is empty 
    if(l1 == NULL ) return l2;
    
    // base case if l2 is empty
    if(l2 == NULL ) return l1;
    
    // recursice call to function with comprision of data  ;
    if(l1->val < l2->val){
        dummyNode = l1;
        dummyNode->next = mergeTwoLists(l1->next , l2);
    }
    else 
    {
        dummyNode  = l2;
        dummyNode->next = mergeTwoLists(l1 , l2->next);
    }
    
    return dummyNode;
    
